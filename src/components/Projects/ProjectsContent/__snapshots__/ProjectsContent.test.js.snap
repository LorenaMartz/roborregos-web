// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectsContent> matches snapshot: Large width: ProjectsContentLargeView.test.js.snap 1`] = `
"<ProjectsContent main_projects={{...}} carousels={{...}} other_projects={{...}}>
  <div className=\\"projects-content\\">
    <div style={{...}} />
    <div style={{...}} />
    <ProjectsContent project_carousels={{...}} main_counter={2}>
      <div className=\\"project-carousels\\">
        <WithStyles(Carousel) className=\\"project-carousel\\" navButtonsAlwaysVisible={true} timeout={200} animation=\\"slide\\" autoPlay={false} index={0}>
          <Carousel classes={{...}} className=\\"project-carousel\\" navButtonsAlwaysVisible={true} timeout={200} animation=\\"slide\\" autoPlay={false} index={0}>
            <div className=\\"Carousel-root-1 project-carousel\\" onMouseEnter={[Function: bound stop]} onMouseOut={[Function: bound reset]}>
              <CarouselItem display={true} active={true} isNext={true} child={{...}} animation=\\"slide\\" timeout={200} next={[Function: bound next]} prev={[Function: bound prev]}>
                <div className=\\"CarouselItem\\">
                  <ForwardRef(Slide) direction=\\"left\\" in={true} timeout={200}>
                    <Transition nodeRef={{...}} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExited={[Function (anonymous)]} onExiting={[Function (anonymous)]} appear={true} in={true} timeout={200} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true}>
                      <div style={{...}}>
                        <ProjectsCard project={{...}} index={0} show_scrollers={false}>
                          <div>
                            <ForwardRef(Fade) in={true} timeout={2000}>
                              <Transition appear={true} in={true} nodeRef={[undefined]} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExited={[Function (anonymous)]} onExiting={[Function (anonymous)]} timeout={2000} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true}>
                                <Row className=\\"projects-card\\" style={{...}} noGutters={false}>
                                  <div style={{...}} className=\\"projects-card row\\">
                                    <Col xs={6}>
                                      <div className=\\"col-6\\">
                                        <img src=\\"carousel1-project-1.jpg\\" className=\\"card-image\\" alt=\\"carousel1-project-1\\" />
                                      </div>
                                    </Col>
                                    <ForwardRef(Grow) in={true} timeout={1500} style={{...}}>
                                      <Transition appear={true} in={true} nodeRef={[undefined]} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExited={[Function (anonymous)]} onExiting={[Function (anonymous)]} addEndListener={[Function: addEndListener]} timeout={1500} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true}>
                                        <Col xs={6} className=\\"card-info\\" style={{...}}>
                                          <div style={{...}} className=\\"card-info col-6\\">
                                            <h2 className=\\"title-text-card\\">
                                              carousel1-project-1
                                            </h2>
                                            <div className=\\"main-text-projects\\">
                                              <p>
                                                description-carousel1-1
                                              </p>
                                            </div>
                                            <button type=\\"button\\" className=\\"card-button\\" onClick={[Function: onClick]} variant=\\"outline-primary\\">
                                              Learn more
                                            </button>
                                          </div>
                                        </Col>
                                      </Transition>
                                    </ForwardRef(Grow)>
                                  </div>
                                </Row>
                              </Transition>
                            </ForwardRef(Fade)>
                            <div />
                          </div>
                        </ProjectsCard>
                      </div>
                    </Transition>
                  </ForwardRef(Slide)>
                </div>
              </CarouselItem>
              <div className=\\"Carousel-buttonWrapper-5 Carousel-fullHeightHoverWrapper-6 Carousel-next-11\\">
                <WithStyles(ForwardRef(IconButton)) className=\\"Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" onClick={[Function: bound next]} aria-label=\\"Next\\">
                  <ForwardRef(IconButton) classes={{...}} className=\\"Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" onClick={[Function: bound next]} aria-label=\\"Next\\">
                    <WithStyles(ForwardRef(ButtonBase)) className=\\"MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: bound next]} aria-label=\\"Next\\">
                      <ForwardRef(ButtonBase) classes={{...}} className=\\"MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: bound next]} aria-label=\\"Next\\">
                        <button className=\\"MuiButtonBase-root MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" onBlur={[Function (anonymous)]} onClick={[Function: bound next]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={0} type=\\"button\\" disabled={false} aria-label=\\"Next\\">
                          <span className=\\"MuiIconButton-label\\">
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon) classes={{...}}>
                                  <svg className=\\"MuiSvgIcon-root\\" focusable=\\"false\\" viewBox=\\"0 0 24 24\\" color={[undefined]} aria-hidden={true} role={[undefined]}>
                                    <path d=\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\" />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                          <WithStyles(memo) center={true}>
                            <ForwardRef(TouchRipple) classes={{...}} center={true}>
                              <span className=\\"MuiTouchRipple-root\\">
                                <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(IconButton)>
                </WithStyles(ForwardRef(IconButton))>
              </div>
              <div className=\\"Carousel-buttonWrapper-5 Carousel-fullHeightHoverWrapper-6 Carousel-prev-12\\">
                <WithStyles(ForwardRef(IconButton)) className=\\"Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" onClick={[Function: bound prev]} aria-label=\\"Previous\\">
                  <ForwardRef(IconButton) classes={{...}} className=\\"Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" onClick={[Function: bound prev]} aria-label=\\"Previous\\">
                    <WithStyles(ForwardRef(ButtonBase)) className=\\"MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: bound prev]} aria-label=\\"Previous\\">
                      <ForwardRef(ButtonBase) classes={{...}} className=\\"MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: bound prev]} aria-label=\\"Previous\\">
                        <button className=\\"MuiButtonBase-root MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" onBlur={[Function (anonymous)]} onClick={[Function: bound prev]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={0} type=\\"button\\" disabled={false} aria-label=\\"Previous\\">
                          <span className=\\"MuiIconButton-label\\">
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon) classes={{...}}>
                                  <svg className=\\"MuiSvgIcon-root\\" focusable=\\"false\\" viewBox=\\"0 0 24 24\\" color={[undefined]} aria-hidden={true} role={[undefined]}>
                                    <path d=\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\" />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                          <WithStyles(memo) center={true}>
                            <ForwardRef(TouchRipple) classes={{...}} center={true}>
                              <span className=\\"MuiTouchRipple-root\\">
                                <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(IconButton)>
                </WithStyles(ForwardRef(IconButton))>
              </div>
              <Indicators classes={{...}} length={1} active={0} press={[Function: bound setActive]} indicatorContainerProps={[undefined]} indicatorProps={[undefined]} activeIndicatorProps={[undefined]}>
                <div className=\\"Carousel-indicators-2 \\" style={[undefined]}>
                  <ForwardRef size=\\"small\\" className=\\"Carousel-indicator-3 Carousel-active-4 undefined\\" style={[undefined]} onClick={[Function: onClick]}>
                    <WithStyles(ForwardRef(SvgIcon)) size=\\"small\\" className=\\"Carousel-indicator-3 Carousel-active-4 undefined\\" style={[undefined]} onClick={[Function: onClick]}>
                      <ForwardRef(SvgIcon) classes={{...}} size=\\"small\\" className=\\"Carousel-indicator-3 Carousel-active-4 undefined\\" style={[undefined]} onClick={[Function: onClick]}>
                        <svg className=\\"MuiSvgIcon-root Carousel-indicator-3 Carousel-active-4 undefined\\" focusable=\\"false\\" viewBox=\\"0 0 24 24\\" color={[undefined]} aria-hidden={true} role={[undefined]} size=\\"small\\" style={[undefined]} onClick={[Function: onClick]}>
                          <circle cx=\\"12\\" cy=\\"12\\" r=\\"8\\" />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </WithStyles(ForwardRef(SvgIcon))>
                  </ForwardRef>
                </div>
              </Indicators>
            </div>
          </Carousel>
        </WithStyles(Carousel)>
        <WithStyles(Carousel) className=\\"project-carousel\\" navButtonsAlwaysVisible={true} timeout={200} animation=\\"slide\\" autoPlay={false} index={1}>
          <Carousel classes={{...}} className=\\"project-carousel\\" navButtonsAlwaysVisible={true} timeout={200} animation=\\"slide\\" autoPlay={false} index={1}>
            <div className=\\"Carousel-root-1 project-carousel\\" onMouseEnter={[Function: bound stop]} onMouseOut={[Function: bound reset]}>
              <CarouselItem display={true} active={true} isNext={true} child={{...}} animation=\\"slide\\" timeout={200} next={[Function: bound next]} prev={[Function: bound prev]}>
                <div className=\\"CarouselItem\\">
                  <ForwardRef(Slide) direction=\\"left\\" in={true} timeout={200}>
                    <Transition nodeRef={{...}} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExited={[Function (anonymous)]} onExiting={[Function (anonymous)]} appear={true} in={true} timeout={200} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true}>
                      <div style={{...}}>
                        <ProjectsCard project={{...}} index={0} show_scrollers={false}>
                          <div>
                            <ForwardRef(Fade) in={true} timeout={2000}>
                              <Transition appear={true} in={true} nodeRef={[undefined]} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExited={[Function (anonymous)]} onExiting={[Function (anonymous)]} timeout={2000} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true}>
                                <Row className=\\"projects-card\\" style={{...}} noGutters={false}>
                                  <div style={{...}} className=\\"projects-card row\\">
                                    <Col xs={6}>
                                      <div className=\\"col-6\\">
                                        <img src=\\"carousel2-project-1.jpg\\" className=\\"card-image\\" alt=\\"carousel2-project-1\\" />
                                      </div>
                                    </Col>
                                    <ForwardRef(Grow) in={true} timeout={1500} style={{...}}>
                                      <Transition appear={true} in={true} nodeRef={[undefined]} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExited={[Function (anonymous)]} onExiting={[Function (anonymous)]} addEndListener={[Function: addEndListener]} timeout={1500} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true}>
                                        <Col xs={6} className=\\"card-info\\" style={{...}}>
                                          <div style={{...}} className=\\"card-info col-6\\">
                                            <h2 className=\\"title-text-card\\">
                                              carousel2-project-1
                                            </h2>
                                            <div className=\\"main-text-projects\\">
                                              <p>
                                                description-carousel2-1
                                              </p>
                                            </div>
                                            <button type=\\"button\\" className=\\"card-button\\" onClick={[Function: onClick]} variant=\\"outline-primary\\">
                                              Learn more
                                            </button>
                                          </div>
                                        </Col>
                                      </Transition>
                                    </ForwardRef(Grow)>
                                  </div>
                                </Row>
                              </Transition>
                            </ForwardRef(Fade)>
                            <div />
                          </div>
                        </ProjectsCard>
                      </div>
                    </Transition>
                  </ForwardRef(Slide)>
                </div>
              </CarouselItem>
              <div className=\\"Carousel-buttonWrapper-5 Carousel-fullHeightHoverWrapper-6 Carousel-next-11\\">
                <WithStyles(ForwardRef(IconButton)) className=\\"Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" onClick={[Function: bound next]} aria-label=\\"Next\\">
                  <ForwardRef(IconButton) classes={{...}} className=\\"Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" onClick={[Function: bound next]} aria-label=\\"Next\\">
                    <WithStyles(ForwardRef(ButtonBase)) className=\\"MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: bound next]} aria-label=\\"Next\\">
                      <ForwardRef(ButtonBase) classes={{...}} className=\\"MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: bound next]} aria-label=\\"Next\\">
                        <button className=\\"MuiButtonBase-root MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8 Carousel-next-11\\" onBlur={[Function (anonymous)]} onClick={[Function: bound next]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={0} type=\\"button\\" disabled={false} aria-label=\\"Next\\">
                          <span className=\\"MuiIconButton-label\\">
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon) classes={{...}}>
                                  <svg className=\\"MuiSvgIcon-root\\" focusable=\\"false\\" viewBox=\\"0 0 24 24\\" color={[undefined]} aria-hidden={true} role={[undefined]}>
                                    <path d=\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\" />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                          <WithStyles(memo) center={true}>
                            <ForwardRef(TouchRipple) classes={{...}} center={true}>
                              <span className=\\"MuiTouchRipple-root\\">
                                <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(IconButton)>
                </WithStyles(ForwardRef(IconButton))>
              </div>
              <div className=\\"Carousel-buttonWrapper-5 Carousel-fullHeightHoverWrapper-6 Carousel-prev-12\\">
                <WithStyles(ForwardRef(IconButton)) className=\\"Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" onClick={[Function: bound prev]} aria-label=\\"Previous\\">
                  <ForwardRef(IconButton) classes={{...}} className=\\"Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" onClick={[Function: bound prev]} aria-label=\\"Previous\\">
                    <WithStyles(ForwardRef(ButtonBase)) className=\\"MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: bound prev]} aria-label=\\"Previous\\">
                      <ForwardRef(ButtonBase) classes={{...}} className=\\"MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: bound prev]} aria-label=\\"Previous\\">
                        <button className=\\"MuiButtonBase-root MuiIconButton-root Carousel-button-7 Carousel-buttonVisible-9 Carousel-fullHeightHoverButton-8  Carousel-prev-12\\" onBlur={[Function (anonymous)]} onClick={[Function: bound prev]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={0} type=\\"button\\" disabled={false} aria-label=\\"Previous\\">
                          <span className=\\"MuiIconButton-label\\">
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon) classes={{...}}>
                                  <svg className=\\"MuiSvgIcon-root\\" focusable=\\"false\\" viewBox=\\"0 0 24 24\\" color={[undefined]} aria-hidden={true} role={[undefined]}>
                                    <path d=\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\" />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                          <WithStyles(memo) center={true}>
                            <ForwardRef(TouchRipple) classes={{...}} center={true}>
                              <span className=\\"MuiTouchRipple-root\\">
                                <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(IconButton)>
                </WithStyles(ForwardRef(IconButton))>
              </div>
              <Indicators classes={{...}} length={1} active={0} press={[Function: bound setActive]} indicatorContainerProps={[undefined]} indicatorProps={[undefined]} activeIndicatorProps={[undefined]}>
                <div className=\\"Carousel-indicators-2 \\" style={[undefined]}>
                  <ForwardRef size=\\"small\\" className=\\"Carousel-indicator-3 Carousel-active-4 undefined\\" style={[undefined]} onClick={[Function: onClick]}>
                    <WithStyles(ForwardRef(SvgIcon)) size=\\"small\\" className=\\"Carousel-indicator-3 Carousel-active-4 undefined\\" style={[undefined]} onClick={[Function: onClick]}>
                      <ForwardRef(SvgIcon) classes={{...}} size=\\"small\\" className=\\"Carousel-indicator-3 Carousel-active-4 undefined\\" style={[undefined]} onClick={[Function: onClick]}>
                        <svg className=\\"MuiSvgIcon-root Carousel-indicator-3 Carousel-active-4 undefined\\" focusable=\\"false\\" viewBox=\\"0 0 24 24\\" color={[undefined]} aria-hidden={true} role={[undefined]} size=\\"small\\" style={[undefined]} onClick={[Function: onClick]}>
                          <circle cx=\\"12\\" cy=\\"12\\" r=\\"8\\" />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </WithStyles(ForwardRef(SvgIcon))>
                  </ForwardRef>
                </div>
              </Indicators>
            </div>
          </Carousel>
        </WithStyles(Carousel)>
      </div>
    </ProjectsContent>
    <ProjectsOther projects={{...}}>
      <div className=\\"projects-other\\">
        <Row noGutters={false}>
          <div className=\\"row\\">
            <div className=\\"other-info\\">
              <h2 className=\\"title-text-other\\">
                Other projects
              </h2>
              <div className=\\"description-other\\">
                <p>
                  Check out other interesting tech projects developed by the community!
                </p>
              </div>
            </div>
          </div>
        </Row>
        <Row noGutters={false}>
          <div className=\\"row\\">
            <div className=\\"projects-other-grid\\">
              <WithStyles(ForwardRef(GridList)) cellHeight=\\"auto\\" cols={3} spacing={3}>
                <ForwardRef(GridList) classes={{...}} cellHeight=\\"auto\\" cols={3} spacing={3}>
                  <ul className=\\"MuiGridList-root\\" style={{...}}>
                    <WithStyles(ForwardRef(GridListTile)) id=\\"other-project-other_project1\\" cols={1} className=\\"project-grid-tile\\" onClick={[Function: onClick]} style={{...}}>
                      <ForwardRef(GridListTile) classes={{...}} id=\\"other-project-other_project1\\" cols={1} className=\\"project-grid-tile\\" onClick={[Function: onClick]} style={{...}}>
                        <li className=\\"MuiGridListTile-root project-grid-tile\\" id=\\"other-project-other_project1\\" onClick={[Function: onClick]} style={{...}}>
                          <div className=\\"MuiGridListTile-tile\\">
                            <div>
                              <img className=\\"other-project-image\\" src=\\"other_project1.jpg\\" alt=\\"other_project1\\" style={{...}} />
                            </div>
                            <div className=\\"project-title\\">
                              <p>
                                other_project1
                              </p>
                            </div>
                          </div>
                        </li>
                      </ForwardRef(GridListTile)>
                    </WithStyles(ForwardRef(GridListTile))>
                  </ul>
                </ForwardRef(GridList)>
              </WithStyles(ForwardRef(GridList))>
            </div>
          </div>
        </Row>
      </div>
    </ProjectsOther>
  </div>
</ProjectsContent>"
`;

exports[`<ProjectsContent> matches snapshot: Small width: ProjectsContentSmallView.test.js.snap 1`] = `ReactWrapper {}`;
